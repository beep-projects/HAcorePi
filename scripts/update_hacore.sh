#!/bin/bash
#
# Copyright (c) 2024, The beep-projects contributors
# this file originated from https://github.com/beep-projects
# Do not remove the lines above.
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see https://www.gnu.org/licenses/
#
# This file is inspired by the firstrun.sh, generated by the Raspberry Pi Imager https://www.raspberrypi.org/software/
#
# This file will update a homeassistant core installation following
# https://www.home-assistant.io/common-tasks/core/#update
# and it is assumed, that the installation was done following
# https://www.home-assistant.io/installation/raspberrypi-other#install-home-assistant-core
#
# This script shall be run as root, so no need for sudo in this script


#######################################
# Checks if any user is holding one of the various lock files used by apt
# and waits until they become available. 
# Warning, you might get stuck forever in here
# Globals:
#   None
# Arguments:
#   None
# Outputs:
#   None
#######################################
function waitForApt() {
  while sudo fuser /var/{lib/{dpkg,apt/lists},cache/apt/archives}/lock >/dev/null 2>&1; do
   echo ["$(date +%T)"] waiting for access to apt lock files ...
   sleep 1
  done
}

#######################################
# Checks if internet can be accessed
# and waits until it becomes available. 
# Warning, you might get stuck forever in here
# Globals:
#   None
# Arguments:
#   None
# Outputs:
#   None
#######################################
function waitForInternet() {
  until curl --output /dev/null --silent --head --fail http://www.google.com; do
    echo ["$(date +%T)"] waiting for internet access ...
    sleep 1
  done
}

#######################################
# Print error message.
# Globals:
#   None
# Arguments:
#   $1 = Error message
#   $2 = return code (optional, default 1)
# Outputs:
#   Prints an error message to stderr
#######################################
function error() {
    printf "%s\n" "${1}" >&2 ## Send message to stderr.
    exit "${2-1}" ## Return a code specified by $2, or 1 by default.
}

CURRENT_USER=$( whoami )
echo "START update_hacore.sh as user: ${CURRENT_USER}"
echo "current directory is $( pwd )"

# first update raspberry pi os
waitForInternet
echo "updating the system"
waitForApt
sudo apt update
waitForApt
sudo apt full-upgrade -y

# 1 Backup your installation.
# it is assumed, that this is already done via the UI

# 2 Check the release notes for backward-incompatible changes on https://www.home-assistant.io/blog/categories/core/
# tricky to do this i a script, I hope you did it before you started the script

# 3 Stop the Home Assistant service.
systemctl stop homeassistant@homeassistant

#change to homeassistant user and run some commands with that user
sudo -u homeassistant -H -s<<EOF

# 5 Activate the virtual environment that Home Assistant is running in
source /srv/homeassistant/bin/activate

# 6 Download and install the new version
pip3 install --upgrade homeassistant
EOF

# 7 When that is complete start the service again for it to use the new files.
systemctl start homeassistant@homeassistant

echo "END update_hacore.sh"
